from django.contrib.auth.decorators import login_required
from django.shortcuts import render
from django.http import JsonResponse
from myapp.models import *
import google.generativeai as genai
from .common import get_data, EntityType
from django.conf import settings


GEMINI_API_KEY = settings.GEMINI_API_KEY
GEMINI_MODEL = "gemini-1.5-flash-8b"

CURRENT_REQUEST = None

COVER_LETTER_DATA = {
    "name": "Example AI Cover Letter",
    "purpose": "To demonstrate how a cover letter could be generated using AI",
    "text": "The text body of the coverletter would be here, generated by AI and tailored to the job or description you provided",
}


@login_required
def ai_add_cover_letter_workflow(request):
    if request.method != 'POST':
        return render(request, 'frontend/modals/ai_cover_letter_modal.html')


    global CURRENT_REQUEST

    CURRENT_REQUEST = request

    cover_letter_description = request.POST.get("cover_letter_description")

    if not cover_letter_description:
        return JsonResponse({ "error": "A cover_letter_description must be provided" })

    # Define the AI's functions
    ai_tools = [
        set_cover_letter_name_and_purpose,
        set_cover_letter_text
    ]

    # Initalize the AI chat
    genai.configure(api_key=GEMINI_API_KEY)
    model = genai.GenerativeModel(model_name=GEMINI_MODEL, tools=ai_tools)
    chat = model.start_chat(enable_automatic_function_calling=True)

    # Purpose and Name
    next_command = f"""
        This is an automated process to walk you through creating a cover letter. 
        Follow resume best practices. 
        Do not hallucinate information. 
        Do not call a function you are not explicitly asked to call. 

        This is a description of the purpose of the cover letter. It could also be a job description, 
        in that case you should assume the resume's purpose is to be tailored to that job:

        {cover_letter_description} 

        Call the 'set_cover_letter_name_and_purpose' function to define the name and purpose of this cover letter.
    """
    response = chat.send_message(next_command)

    # Get user info
    user_info = get_data(EntityType.USER)
    user_education = get_data(EntityType.EDUCATION)
    user_work_experience = get_data(EntityType.WORK_EXPERIENCE)
    user_skills = get_data(EntityType.SKILLS)
    user_projects = get_data(EntityType.PROJECTS)
    user_certifications = get_data(EntityType.CERTIFICATIONS)

    # Summary
    next_command = f"""
        Here is all the information you need to know about the person you are completing this cover letter for. 

        Personal Information: 
        {user_info} 

        Education: 
        {user_education} 

        Work Experience: 
        {user_work_experience}

        Skills: 
        {user_skills}

        Projects: 
        {user_projects} 

        Certifications: 
        {user_certifications} 

        When writing the cover letter:
        
        Do not include any placeholders such as [Hiring Manager Name], [Platform where you saw the ad], etc. You should use language that avoids placeholders since everything you need should be here. 
        Use professional, but common language. Do not use words that are not commonly used. 
        Do not halucinate any information about the applicant, all information should be sourced from the provided information. 
        Keep the cover letter an appropriate length, typically 2-5 paragraphs. 
        Keep in mind the purpose described earlier. 

        Call the 'set_cover_letter_text' function to create the cover letter, strictly follow all instructions I have provided.
    """
    response = chat.send_message(next_command)


    return COVER_LETTER_DATA


# AI Tools

def set_cover_letter_name_and_purpose(name:str, purpose:str):
    """
    Sets the name and purpose of the cover letter you are currently creating.
    Args:
        name: The name of this cover letter
        purpose: A very brief description of what this cover letter will be used for
    """
    global COVER_LETTER_DATA
    COVER_LETTER_DATA['name'] = name
    COVER_LETTER_DATA['purpose'] = purpose

def set_cover_letter_text(text:str):
    """
    Sets the text of the cover letter you are currently creating.
    Args:
        text: The body of the cover letter, the actual cover letter itself.
    """
    global COVER_LETTER_DATA
    COVER_LETTER_DATA['text'] = text
